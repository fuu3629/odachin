// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file v1/odachin/usage.proto (package odachin.reward, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/odachin/usage.proto.
 */
export const file_v1_odachin_usage: GenFile = /*@__PURE__*/
  fileDesc("ChZ2MS9vZGFjaGluL3VzYWdlLnByb3RvEg5vZGFjaGluLnJld2FyZCKPAQoVQXBwbGljYXRlVXNhZ2VSZXF1ZXN0EhUKBHR5cGUYASABKAlCB7pIBHICEAESFwoGYW1vdW50GAIgASgFQge6SAQaAiAAEhYKBXRpdGxlGAMgASgJQge6SARyAhABEhMKC2Rlc2NyaXB0aW9uGAQgASgJEhkKCGNhdGVnb3J5GAUgASgJQge6SARyAhABIjAKGkdldFVzYWdlQ2F0ZWdvcmllc1Jlc3BvbnNlEhIKCmNhdGVnb3JpZXMYASADKAkiMAoTQXBwcm92ZVVzYWdlUmVxdWVzdBIZCgh1c2FnZV9pZBgBIAEoBEIHukgEMgIgADKGAgoMVXNhZ2VTZXJ2aWNlEk8KDkFwcGxpY2F0ZVVzYWdlEiUub2RhY2hpbi5yZXdhcmQuQXBwbGljYXRlVXNhZ2VSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5ElgKEkdldFVzYWdlQ2F0ZWdvcmllcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoqLm9kYWNoaW4ucmV3YXJkLkdldFVzYWdlQ2F0ZWdvcmllc1Jlc3BvbnNlEksKDEFwcHJvdmVVc2FnZRIjLm9kYWNoaW4ucmV3YXJkLkFwcHJvdmVVc2FnZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHliBnByb3RvMw", [file_google_protobuf_empty, file_google_protobuf_timestamp, file_buf_validate_validate]);

/**
 * @generated from message odachin.reward.ApplicateUsageRequest
 */
export type ApplicateUsageRequest = Message<"odachin.reward.ApplicateUsageRequest"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: int32 amount = 2;
   */
  amount: number;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string category = 5;
   */
  category: string;
};

/**
 * Describes the message odachin.reward.ApplicateUsageRequest.
 * Use `create(ApplicateUsageRequestSchema)` to create a new message.
 */
export const ApplicateUsageRequestSchema: GenMessage<ApplicateUsageRequest> = /*@__PURE__*/
  messageDesc(file_v1_odachin_usage, 0);

/**
 * @generated from message odachin.reward.GetUsageCategoriesResponse
 */
export type GetUsageCategoriesResponse = Message<"odachin.reward.GetUsageCategoriesResponse"> & {
  /**
   * @generated from field: repeated string categories = 1;
   */
  categories: string[];
};

/**
 * Describes the message odachin.reward.GetUsageCategoriesResponse.
 * Use `create(GetUsageCategoriesResponseSchema)` to create a new message.
 */
export const GetUsageCategoriesResponseSchema: GenMessage<GetUsageCategoriesResponse> = /*@__PURE__*/
  messageDesc(file_v1_odachin_usage, 1);

/**
 * @generated from message odachin.reward.ApproveUsageRequest
 */
export type ApproveUsageRequest = Message<"odachin.reward.ApproveUsageRequest"> & {
  /**
   * @generated from field: uint64 usage_id = 1;
   */
  usageId: bigint;
};

/**
 * Describes the message odachin.reward.ApproveUsageRequest.
 * Use `create(ApproveUsageRequestSchema)` to create a new message.
 */
export const ApproveUsageRequestSchema: GenMessage<ApproveUsageRequest> = /*@__PURE__*/
  messageDesc(file_v1_odachin_usage, 2);

/**
 * @generated from service odachin.reward.UsageService
 */
export const UsageService: GenService<{
  /**
   * @generated from rpc odachin.reward.UsageService.ApplicateUsage
   */
  applicateUsage: {
    methodKind: "unary";
    input: typeof ApplicateUsageRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc odachin.reward.UsageService.GetUsageCategories
   */
  getUsageCategories: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetUsageCategoriesResponseSchema;
  },
  /**
   * @generated from rpc odachin.reward.UsageService.ApproveUsage
   */
  approveUsage: {
    methodKind: "unary";
    input: typeof ApproveUsageRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_odachin_usage, 0);

