// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file v1/odachin/allowance.proto (package odachin.allowance, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/odachin/allowance.proto.
 */
export const file_v1_odachin_allowance: GenFile = /*@__PURE__*/
  fileDesc("Chp2MS9vZGFjaGluL2FsbG93YW5jZS5wcm90bxIRb2RhY2hpbi5hbGxvd2FuY2UiNgoIQWxsb2FuY2UiKgoEVHlwZRIJCgVEQUlMWRAAEgoKBldFRUtMWRABEgsKB01PTlRITFkQAiKJAgoYUmVnaXN0ZXJBbGxvd2FuY2VSZXF1ZXN0EhsKCnRvX3VzZXJfaWQYASABKAlCB7pIBHICEAESHgoGYW1vdW50GAIgASgBQg66SAsSCSEAAAAAAAAAABJBCg1pbnRlcnZhbF90eXBlGAMgASgOMiAub2RhY2hpbi5hbGxvd2FuY2UuQWxsb2FuY2UuVHlwZUIIukgFggECEAESHAoEZGF0ZRgEIAEoDUIJukgGGgQYHygBSACIAQESNgoLZGF5X29mX3dlZWsYBSABKA4yHC5vZGFjaGluLmFsbG93YW5jZS5EYXlPZldlZWtIAYgBAUIHCgVfZGF0ZUIOCgxfZGF5X29mX3dlZWsimwIKFlVwZGF0ZUFsbG93YW5jZVJlcXVlc3QSHQoMYWxsb3dhbmNlX2lkGAEgASgEQge6SAQyAigBEiMKBmFtb3VudBgCIAEoAUIOukgLEgkhAAAAAAAAAABIAIgBARI8Cg1pbnRlcnZhbF90eXBlGAMgASgOMiAub2RhY2hpbi5hbGxvd2FuY2UuQWxsb2FuY2UuVHlwZUgBiAEBEhEKBGRhdGUYBCABKA1IAogBARI2CgtkYXlfb2Zfd2VlaxgFIAEoDjIcLm9kYWNoaW4uYWxsb3dhbmNlLkRheU9mV2Vla0gDiAEBQgkKB19hbW91bnRCEAoOX2ludGVydmFsX3R5cGVCBwoFX2RhdGVCDgoMX2RheV9vZl93ZWVrIqwCCglBbGxvd2FuY2USFAoMYWxsb3dhbmNlX2lkGAEgASgEEhIKCnRvX3VzZXJfaWQYAiABKAkSFAoMdG9fdXNlcl9uYW1lGAMgASgJEg4KBmFtb3VudBgEIAEoARI3Cg1pbnRlcnZhbF90eXBlGAUgASgOMiAub2RhY2hpbi5hbGxvd2FuY2UuQWxsb2FuY2UuVHlwZRIRCgRkYXRlGAYgASgNSACIAQESNgoLZGF5X29mX3dlZWsYByABKA4yHC5vZGFjaGluLmFsbG93YW5jZS5EYXlPZldlZWtIAYgBARIdChBhdmF0YXJfaW1hZ2VfdXJsGAggASgJSAKIAQFCBwoFX2RhdGVCDgoMX2RheV9vZl93ZWVrQhMKEV9hdmF0YXJfaW1hZ2VfdXJsIlQKIEdldEFsbG93YW5jZUJ5RnJvbVVzZXJJZFJlc3BvbnNlEjAKCmFsbG93YW5jZXMYASADKAsyHC5vZGFjaGluLmFsbG93YW5jZS5BbGxvd2FuY2UqZwoJRGF5T2ZXZWVrEgoKBk1PTkRBWRAAEgsKB1RVRVNEQVkQARINCglXRURORVNEQVkQAhIMCghUSFVSU0RBWRADEgoKBkZSSURBWRAEEgwKCFNBVFVSREFZEAUSCgoGU1VOREFZEAYyqwIKEEFsbG93YW5jZVNlcnZpY2USWAoRUmVnaXN0ZXJBbGxvd2FuY2USKy5vZGFjaGluLmFsbG93YW5jZS5SZWdpc3RlckFsbG93YW5jZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSVAoPVXBkYXRlQWxsb3dhbmNlEikub2RhY2hpbi5hbGxvd2FuY2UuVXBkYXRlQWxsb3dhbmNlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJnChhHZXRBbGxvd2FuY2VCeUZyb21Vc2VySWQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaMy5vZGFjaGluLmFsbG93YW5jZS5HZXRBbGxvd2FuY2VCeUZyb21Vc2VySWRSZXNwb25zZWIGcHJvdG8z", [file_google_protobuf_empty, file_buf_validate_validate]);

/**
 * @generated from message odachin.allowance.Alloance
 */
export type Alloance = Message<"odachin.allowance.Alloance"> & {
};

/**
 * Describes the message odachin.allowance.Alloance.
 * Use `create(AlloanceSchema)` to create a new message.
 */
export const AlloanceSchema: GenMessage<Alloance> = /*@__PURE__*/
  messageDesc(file_v1_odachin_allowance, 0);

/**
 * @generated from enum odachin.allowance.Alloance.Type
 */
export enum Alloance_Type {
  /**
   * 毎日
   *
   * @generated from enum value: DAILY = 0;
   */
  DAILY = 0,

  /**
   * 毎週
   *
   * @generated from enum value: WEEKLY = 1;
   */
  WEEKLY = 1,

  /**
   * 毎月
   *
   * @generated from enum value: MONTHLY = 2;
   */
  MONTHLY = 2,
}

/**
 * Describes the enum odachin.allowance.Alloance.Type.
 */
export const Alloance_TypeSchema: GenEnum<Alloance_Type> = /*@__PURE__*/
  enumDesc(file_v1_odachin_allowance, 0, 0);

/**
 * @generated from message odachin.allowance.RegisterAllowanceRequest
 */
export type RegisterAllowanceRequest = Message<"odachin.allowance.RegisterAllowanceRequest"> & {
  /**
   * @generated from field: string to_user_id = 1;
   */
  toUserId: string;

  /**
   * @generated from field: double amount = 2;
   */
  amount: number;

  /**
   * @generated from field: odachin.allowance.Alloance.Type interval_type = 3;
   */
  intervalType: Alloance_Type;

  /**
   * @generated from field: optional uint32 date = 4;
   */
  date?: number;

  /**
   * @generated from field: optional odachin.allowance.DayOfWeek day_of_week = 5;
   */
  dayOfWeek?: DayOfWeek;
};

/**
 * Describes the message odachin.allowance.RegisterAllowanceRequest.
 * Use `create(RegisterAllowanceRequestSchema)` to create a new message.
 */
export const RegisterAllowanceRequestSchema: GenMessage<RegisterAllowanceRequest> = /*@__PURE__*/
  messageDesc(file_v1_odachin_allowance, 1);

/**
 * @generated from message odachin.allowance.UpdateAllowanceRequest
 */
export type UpdateAllowanceRequest = Message<"odachin.allowance.UpdateAllowanceRequest"> & {
  /**
   * @generated from field: uint64 allowance_id = 1;
   */
  allowanceId: bigint;

  /**
   * @generated from field: optional double amount = 2;
   */
  amount?: number;

  /**
   * @generated from field: optional odachin.allowance.Alloance.Type interval_type = 3;
   */
  intervalType?: Alloance_Type;

  /**
   * @generated from field: optional uint32 date = 4;
   */
  date?: number;

  /**
   * @generated from field: optional odachin.allowance.DayOfWeek day_of_week = 5;
   */
  dayOfWeek?: DayOfWeek;
};

/**
 * Describes the message odachin.allowance.UpdateAllowanceRequest.
 * Use `create(UpdateAllowanceRequestSchema)` to create a new message.
 */
export const UpdateAllowanceRequestSchema: GenMessage<UpdateAllowanceRequest> = /*@__PURE__*/
  messageDesc(file_v1_odachin_allowance, 2);

/**
 * @generated from message odachin.allowance.Allowance
 */
export type Allowance = Message<"odachin.allowance.Allowance"> & {
  /**
   * @generated from field: uint64 allowance_id = 1;
   */
  allowanceId: bigint;

  /**
   * @generated from field: string to_user_id = 2;
   */
  toUserId: string;

  /**
   * @generated from field: string to_user_name = 3;
   */
  toUserName: string;

  /**
   * @generated from field: double amount = 4;
   */
  amount: number;

  /**
   * @generated from field: odachin.allowance.Alloance.Type interval_type = 5;
   */
  intervalType: Alloance_Type;

  /**
   * @generated from field: optional uint32 date = 6;
   */
  date?: number;

  /**
   * @generated from field: optional odachin.allowance.DayOfWeek day_of_week = 7;
   */
  dayOfWeek?: DayOfWeek;

  /**
   * @generated from field: optional string avatar_image_url = 8;
   */
  avatarImageUrl?: string;
};

/**
 * Describes the message odachin.allowance.Allowance.
 * Use `create(AllowanceSchema)` to create a new message.
 */
export const AllowanceSchema: GenMessage<Allowance> = /*@__PURE__*/
  messageDesc(file_v1_odachin_allowance, 3);

/**
 * @generated from message odachin.allowance.GetAllowanceByFromUserIdResponse
 */
export type GetAllowanceByFromUserIdResponse = Message<"odachin.allowance.GetAllowanceByFromUserIdResponse"> & {
  /**
   * @generated from field: repeated odachin.allowance.Allowance allowances = 1;
   */
  allowances: Allowance[];
};

/**
 * Describes the message odachin.allowance.GetAllowanceByFromUserIdResponse.
 * Use `create(GetAllowanceByFromUserIdResponseSchema)` to create a new message.
 */
export const GetAllowanceByFromUserIdResponseSchema: GenMessage<GetAllowanceByFromUserIdResponse> = /*@__PURE__*/
  messageDesc(file_v1_odachin_allowance, 4);

/**
 * @generated from enum odachin.allowance.DayOfWeek
 */
export enum DayOfWeek {
  /**
   * @generated from enum value: MONDAY = 0;
   */
  MONDAY = 0,

  /**
   * @generated from enum value: TUESDAY = 1;
   */
  TUESDAY = 1,

  /**
   * @generated from enum value: WEDNESDAY = 2;
   */
  WEDNESDAY = 2,

  /**
   * @generated from enum value: THURSDAY = 3;
   */
  THURSDAY = 3,

  /**
   * @generated from enum value: FRIDAY = 4;
   */
  FRIDAY = 4,

  /**
   * @generated from enum value: SATURDAY = 5;
   */
  SATURDAY = 5,

  /**
   * @generated from enum value: SUNDAY = 6;
   */
  SUNDAY = 6,
}

/**
 * Describes the enum odachin.allowance.DayOfWeek.
 */
export const DayOfWeekSchema: GenEnum<DayOfWeek> = /*@__PURE__*/
  enumDesc(file_v1_odachin_allowance, 0);

/**
 * @generated from service odachin.allowance.AllowanceService
 */
export const AllowanceService: GenService<{
  /**
   * @generated from rpc odachin.allowance.AllowanceService.RegisterAllowance
   */
  registerAllowance: {
    methodKind: "unary";
    input: typeof RegisterAllowanceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc odachin.allowance.AllowanceService.UpdateAllowance
   */
  updateAllowance: {
    methodKind: "unary";
    input: typeof UpdateAllowanceRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc odachin.allowance.AllowanceService.GetAllowanceByFromUserId
   */
  getAllowanceByFromUserId: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetAllowanceByFromUserIdResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_odachin_allowance, 0);

