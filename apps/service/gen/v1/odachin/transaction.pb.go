// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: v1/odachin/transaction.proto

package odachin

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTransactionListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartYear     uint32                 `protobuf:"varint,1,opt,name=start_year,json=startYear,proto3" json:"start_year,omitempty"`
	StartMonth    uint32                 `protobuf:"varint,2,opt,name=start_month,json=startMonth,proto3" json:"start_month,omitempty"`
	StartDay      *uint32                `protobuf:"varint,3,opt,name=start_day,json=startDay,proto3,oneof" json:"start_day,omitempty"`
	EndYear       uint32                 `protobuf:"varint,4,opt,name=end_year,json=endYear,proto3" json:"end_year,omitempty"`
	EndMonth      uint32                 `protobuf:"varint,5,opt,name=end_month,json=endMonth,proto3" json:"end_month,omitempty"`
	EndDay        *uint32                `protobuf:"varint,6,opt,name=end_day,json=endDay,proto3,oneof" json:"end_day,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionListRequest) Reset() {
	*x = GetTransactionListRequest{}
	mi := &file_v1_odachin_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionListRequest) ProtoMessage() {}

func (x *GetTransactionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionListRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionListRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *GetTransactionListRequest) GetStartYear() uint32 {
	if x != nil {
		return x.StartYear
	}
	return 0
}

func (x *GetTransactionListRequest) GetStartMonth() uint32 {
	if x != nil {
		return x.StartMonth
	}
	return 0
}

func (x *GetTransactionListRequest) GetStartDay() uint32 {
	if x != nil && x.StartDay != nil {
		return *x.StartDay
	}
	return 0
}

func (x *GetTransactionListRequest) GetEndYear() uint32 {
	if x != nil {
		return x.EndYear
	}
	return 0
}

func (x *GetTransactionListRequest) GetEndMonth() uint32 {
	if x != nil {
		return x.EndMonth
	}
	return 0
}

func (x *GetTransactionListRequest) GetEndDay() uint32 {
	if x != nil && x.EndDay != nil {
		return *x.EndDay
	}
	return 0
}

type TransactionInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionId   uint64                 `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	FromUserId      string                 `protobuf:"bytes,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId        string                 `protobuf:"bytes,3,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Amount          float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TransactionType string                 `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Title           string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	mi := &file_v1_odachin_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_v1_odachin_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionInfo) GetTransactionId() uint64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *TransactionInfo) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *TransactionInfo) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *TransactionInfo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionInfo) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TransactionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetTransactionListResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionList []*TransactionInfo     `protobuf:"bytes,1,rep,name=transaction_list,json=transactionList,proto3" json:"transaction_list,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTransactionListResponse) Reset() {
	*x = GetTransactionListResponse{}
	mi := &file_v1_odachin_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionListResponse) ProtoMessage() {}

func (x *GetTransactionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionListResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionListResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *GetTransactionListResponse) GetTransactionList() []*TransactionInfo {
	if x != nil {
		return x.TransactionList
	}
	return nil
}

var File_v1_odachin_transaction_proto protoreflect.FileDescriptor

var file_v1_odachin_transaction_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x02, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x2a, 0x03, 0x28, 0xd0, 0x0f, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x2a, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xba, 0x48, 0x06, 0x2a, 0x04, 0x18, 0x0c, 0x28, 0x01,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x2a, 0x04, 0x18, 0x1f, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x2a, 0x03, 0x28, 0xd0, 0x0f, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x12, 0x26,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x09, 0xba, 0x48, 0x06, 0x2a, 0x04, 0x18, 0x0c, 0x28, 0x01, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xba, 0x48, 0x06, 0x2a, 0x04, 0x18, 0x1f,
	0x28, 0x01, 0x48, 0x01, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x22, 0xe2, 0x02, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x28, 0x01, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42,
	0x0e, 0xba, 0x48, 0x0b, 0x12, 0x09, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x68,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x81, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb7, 0x01, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x42, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x75, 0x33, 0x36, 0x32, 0x39, 0x2f, 0x6f, 0x64, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0xa2,
	0x02, 0x03, 0x4f, 0x52, 0x58, 0xaa, 0x02, 0x0e, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0xca, 0x02, 0x0e, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0xe2, 0x02, 0x1a, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x3a, 0x3a,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_v1_odachin_transaction_proto_rawDescOnce sync.Once
	file_v1_odachin_transaction_proto_rawDescData []byte
)

func file_v1_odachin_transaction_proto_rawDescGZIP() []byte {
	file_v1_odachin_transaction_proto_rawDescOnce.Do(func() {
		file_v1_odachin_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_odachin_transaction_proto_rawDesc), len(file_v1_odachin_transaction_proto_rawDesc)))
	})
	return file_v1_odachin_transaction_proto_rawDescData
}

var file_v1_odachin_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_odachin_transaction_proto_goTypes = []any{
	(*GetTransactionListRequest)(nil),  // 0: odachin.reward.GetTransactionListRequest
	(*TransactionInfo)(nil),            // 1: odachin.reward.TransactionInfo
	(*GetTransactionListResponse)(nil), // 2: odachin.reward.GetTransactionListResponse
	(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
}
var file_v1_odachin_transaction_proto_depIdxs = []int32{
	3, // 0: odachin.reward.TransactionInfo.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: odachin.reward.GetTransactionListResponse.transaction_list:type_name -> odachin.reward.TransactionInfo
	0, // 2: odachin.reward.TransactionService.GetTransactionList:input_type -> odachin.reward.GetTransactionListRequest
	2, // 3: odachin.reward.TransactionService.GetTransactionList:output_type -> odachin.reward.GetTransactionListResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_odachin_transaction_proto_init() }
func file_v1_odachin_transaction_proto_init() {
	if File_v1_odachin_transaction_proto != nil {
		return
	}
	file_v1_odachin_transaction_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_odachin_transaction_proto_rawDesc), len(file_v1_odachin_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_odachin_transaction_proto_goTypes,
		DependencyIndexes: file_v1_odachin_transaction_proto_depIdxs,
		MessageInfos:      file_v1_odachin_transaction_proto_msgTypes,
	}.Build()
	File_v1_odachin_transaction_proto = out.File
	file_v1_odachin_transaction_proto_goTypes = nil
	file_v1_odachin_transaction_proto_depIdxs = nil
}
