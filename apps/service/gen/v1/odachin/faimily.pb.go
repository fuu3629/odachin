// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: v1/odachin/faimily.proto

package odachin

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FamilyUser struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AvatarImageUrl *string                `protobuf:"bytes,3,opt,name=avatar_image_url,json=avatarImageUrl,proto3,oneof" json:"avatar_image_url,omitempty"`
	Role           Role                   `protobuf:"varint,4,opt,name=role,proto3,enum=odachin.auth.Role" json:"role,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FamilyUser) Reset() {
	*x = FamilyUser{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyUser) ProtoMessage() {}

func (x *FamilyUser) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyUser.ProtoReflect.Descriptor instead.
func (*FamilyUser) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{0}
}

func (x *FamilyUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FamilyUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamilyUser) GetAvatarImageUrl() string {
	if x != nil && x.AvatarImageUrl != nil {
		return *x.AvatarImageUrl
	}
	return ""
}

func (x *FamilyUser) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_PARENT
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FamilyName    string                 `protobuf:"bytes,1,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupRequest) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

type InviteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToUserId      string                 `protobuf:"bytes,1,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{2}
}

func (x *InviteUserRequest) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

type AcceptInvitationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvitationId  uint64                 `protobuf:"varint,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptInvitationRequest) Reset() {
	*x = AcceptInvitationRequest{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptInvitationRequest) ProtoMessage() {}

func (x *AcceptInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptInvitationRequest.ProtoReflect.Descriptor instead.
func (*AcceptInvitationRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptInvitationRequest) GetInvitationId() uint64 {
	if x != nil {
		return x.InvitationId
	}
	return 0
}

type GetFamilyInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FamilyMembers []*FamilyUser          `protobuf:"bytes,1,rep,name=family_members,json=familyMembers,proto3" json:"family_members,omitempty"`
	FamilyName    string                 `protobuf:"bytes,2,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	FamilyId      uint64                 `protobuf:"varint,3,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFamilyInfoResponse) Reset() {
	*x = GetFamilyInfoResponse{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFamilyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFamilyInfoResponse) ProtoMessage() {}

func (x *GetFamilyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFamilyInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFamilyInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{4}
}

func (x *GetFamilyInfoResponse) GetFamilyMembers() []*FamilyUser {
	if x != nil {
		return x.FamilyMembers
	}
	return nil
}

func (x *GetFamilyInfoResponse) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *GetFamilyInfoResponse) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

type InvitationMember struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AvatarImageUrl *string                `protobuf:"bytes,3,opt,name=avatar_image_url,json=avatarImageUrl,proto3,oneof" json:"avatar_image_url,omitempty"`
	InvitationId   uint64                 `protobuf:"varint,4,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InvitationMember) Reset() {
	*x = InvitationMember{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitationMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationMember) ProtoMessage() {}

func (x *InvitationMember) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationMember.ProtoReflect.Descriptor instead.
func (*InvitationMember) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{5}
}

func (x *InvitationMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InvitationMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvitationMember) GetAvatarImageUrl() string {
	if x != nil && x.AvatarImageUrl != nil {
		return *x.AvatarImageUrl
	}
	return ""
}

func (x *InvitationMember) GetInvitationId() uint64 {
	if x != nil {
		return x.InvitationId
	}
	return 0
}

type GetInvitationListResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	InvitationMembers []*InvitationMember    `protobuf:"bytes,1,rep,name=invitation_members,json=invitationMembers,proto3" json:"invitation_members,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetInvitationListResponse) Reset() {
	*x = GetInvitationListResponse{}
	mi := &file_v1_odachin_faimily_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInvitationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInvitationListResponse) ProtoMessage() {}

func (x *GetInvitationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_faimily_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInvitationListResponse.ProtoReflect.Descriptor instead.
func (*GetInvitationListResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_faimily_proto_rawDescGZIP(), []int{6}
}

func (x *GetInvitationListResponse) GetInvitationMembers() []*InvitationMember {
	if x != nil {
		return x.InvitationMembers
	}
	return nil
}

var File_v1_odachin_faimily_proto protoreflect.FileDescriptor

var file_v1_odachin_faimily_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2f, 0x66, 0x61, 0x69,
	0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x64, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x0a,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x64, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x6c,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x32, 0xa0, 0x03, 0x0a,
	0x0d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e,
	0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x25, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x53, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x2e, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0xb3, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x42, 0x0c, 0x46, 0x61, 0x69, 0x6d, 0x69, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x75, 0x33, 0x36, 0x32, 0x39, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0xa2, 0x02,
	0x03, 0x4f, 0x46, 0x58, 0xaa, 0x02, 0x0e, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0xca, 0x02, 0x0e, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x5c,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0xe2, 0x02, 0x1a, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x5c, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x3a, 0x3a, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_v1_odachin_faimily_proto_rawDescOnce sync.Once
	file_v1_odachin_faimily_proto_rawDescData []byte
)

func file_v1_odachin_faimily_proto_rawDescGZIP() []byte {
	file_v1_odachin_faimily_proto_rawDescOnce.Do(func() {
		file_v1_odachin_faimily_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_odachin_faimily_proto_rawDesc), len(file_v1_odachin_faimily_proto_rawDesc)))
	})
	return file_v1_odachin_faimily_proto_rawDescData
}

var file_v1_odachin_faimily_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1_odachin_faimily_proto_goTypes = []any{
	(*FamilyUser)(nil),                // 0: odachin.family.FamilyUser
	(*CreateGroupRequest)(nil),        // 1: odachin.family.CreateGroupRequest
	(*InviteUserRequest)(nil),         // 2: odachin.family.InviteUserRequest
	(*AcceptInvitationRequest)(nil),   // 3: odachin.family.AcceptInvitationRequest
	(*GetFamilyInfoResponse)(nil),     // 4: odachin.family.GetFamilyInfoResponse
	(*InvitationMember)(nil),          // 5: odachin.family.InvitationMember
	(*GetInvitationListResponse)(nil), // 6: odachin.family.GetInvitationListResponse
	(Role)(0),                         // 7: odachin.auth.Role
	(*emptypb.Empty)(nil),             // 8: google.protobuf.Empty
}
var file_v1_odachin_faimily_proto_depIdxs = []int32{
	7, // 0: odachin.family.FamilyUser.role:type_name -> odachin.auth.Role
	0, // 1: odachin.family.GetFamilyInfoResponse.family_members:type_name -> odachin.family.FamilyUser
	5, // 2: odachin.family.GetInvitationListResponse.invitation_members:type_name -> odachin.family.InvitationMember
	1, // 3: odachin.family.FamilyService.CreateGroup:input_type -> odachin.family.CreateGroupRequest
	8, // 4: odachin.family.FamilyService.GetFamilyInfo:input_type -> google.protobuf.Empty
	2, // 5: odachin.family.FamilyService.InviteUser:input_type -> odachin.family.InviteUserRequest
	3, // 6: odachin.family.FamilyService.AcceptInvitation:input_type -> odachin.family.AcceptInvitationRequest
	8, // 7: odachin.family.FamilyService.GetInvitationList:input_type -> google.protobuf.Empty
	8, // 8: odachin.family.FamilyService.CreateGroup:output_type -> google.protobuf.Empty
	4, // 9: odachin.family.FamilyService.GetFamilyInfo:output_type -> odachin.family.GetFamilyInfoResponse
	8, // 10: odachin.family.FamilyService.InviteUser:output_type -> google.protobuf.Empty
	8, // 11: odachin.family.FamilyService.AcceptInvitation:output_type -> google.protobuf.Empty
	6, // 12: odachin.family.FamilyService.GetInvitationList:output_type -> odachin.family.GetInvitationListResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_odachin_faimily_proto_init() }
func file_v1_odachin_faimily_proto_init() {
	if File_v1_odachin_faimily_proto != nil {
		return
	}
	file_v1_odachin_auth_proto_init()
	file_v1_odachin_faimily_proto_msgTypes[0].OneofWrappers = []any{}
	file_v1_odachin_faimily_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_odachin_faimily_proto_rawDesc), len(file_v1_odachin_faimily_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_odachin_faimily_proto_goTypes,
		DependencyIndexes: file_v1_odachin_faimily_proto_depIdxs,
		MessageInfos:      file_v1_odachin_faimily_proto_msgTypes,
	}.Build()
	File_v1_odachin_faimily_proto = out.File
	file_v1_odachin_faimily_proto_goTypes = nil
	file_v1_odachin_faimily_proto_depIdxs = nil
}
