// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: v1/odachin/usage.proto

package odachin

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicateUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicateUsageRequest) Reset() {
	*x = ApplicateUsageRequest{}
	mi := &file_v1_odachin_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicateUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicateUsageRequest) ProtoMessage() {}

func (x *ApplicateUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicateUsageRequest.ProtoReflect.Descriptor instead.
func (*ApplicateUsageRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicateUsageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplicateUsageRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ApplicateUsageRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApplicateUsageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApplicateUsageRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type GetUsageCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []string               `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsageCategoriesResponse) Reset() {
	*x = GetUsageCategoriesResponse{}
	mi := &file_v1_odachin_usage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageCategoriesResponse) ProtoMessage() {}

func (x *GetUsageCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetUsageCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{1}
}

func (x *GetUsageCategoriesResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type ApproveUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsageId       uint64                 `protobuf:"varint,1,opt,name=usage_id,json=usageId,proto3" json:"usage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveUsageRequest) Reset() {
	*x = ApproveUsageRequest{}
	mi := &file_v1_odachin_usage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveUsageRequest) ProtoMessage() {}

func (x *ApproveUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveUsageRequest.ProtoReflect.Descriptor instead.
func (*ApproveUsageRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{2}
}

func (x *ApproveUsageRequest) GetUsageId() uint64 {
	if x != nil {
		return x.UsageId
	}
	return 0
}

type UsageApplication struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsageId       uint64                 `protobuf:"varint,1,opt,name=usage_id,json=usageId,proto3" json:"usage_id,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageApplication) Reset() {
	*x = UsageApplication{}
	mi := &file_v1_odachin_usage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageApplication) ProtoMessage() {}

func (x *UsageApplication) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageApplication.ProtoReflect.Descriptor instead.
func (*UsageApplication) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{3}
}

func (x *UsageApplication) GetUsageId() uint64 {
	if x != nil {
		return x.UsageId
	}
	return 0
}

func (x *UsageApplication) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UsageApplication) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UsageApplication) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UsageApplication) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UsageApplication) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UsageApplication) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetUsageApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        []string               `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsageApplicationRequest) Reset() {
	*x = GetUsageApplicationRequest{}
	mi := &file_v1_odachin_usage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageApplicationRequest) ProtoMessage() {}

func (x *GetUsageApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetUsageApplicationRequest) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{4}
}

func (x *GetUsageApplicationRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetUsageApplicationResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UsageApplications []*UsageApplication    `protobuf:"bytes,1,rep,name=usage_applications,json=usageApplications,proto3" json:"usage_applications,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetUsageApplicationResponse) Reset() {
	*x = GetUsageApplicationResponse{}
	mi := &file_v1_odachin_usage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageApplicationResponse) ProtoMessage() {}

func (x *GetUsageApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetUsageApplicationResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{5}
}

func (x *GetUsageApplicationResponse) GetUsageApplications() []*UsageApplication {
	if x != nil {
		return x.UsageApplications
	}
	return nil
}

type UsageSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageSummary) Reset() {
	*x = UsageSummary{}
	mi := &file_v1_odachin_usage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageSummary) ProtoMessage() {}

func (x *UsageSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageSummary.ProtoReflect.Descriptor instead.
func (*UsageSummary) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{6}
}

func (x *UsageSummary) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UsageSummary) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetUsageSummaryResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UsageSummaries        []*UsageSummary        `protobuf:"bytes,1,rep,name=usage_summaries,json=usageSummaries,proto3" json:"usage_summaries,omitempty"`
	UsageSummariesMonthly []*UsageSummary        `protobuf:"bytes,2,rep,name=usage_summaries_monthly,json=usageSummariesMonthly,proto3" json:"usage_summaries_monthly,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetUsageSummaryResponse) Reset() {
	*x = GetUsageSummaryResponse{}
	mi := &file_v1_odachin_usage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsageSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageSummaryResponse) ProtoMessage() {}

func (x *GetUsageSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_odachin_usage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetUsageSummaryResponse) Descriptor() ([]byte, []int) {
	return file_v1_odachin_usage_proto_rawDescGZIP(), []int{7}
}

func (x *GetUsageSummaryResponse) GetUsageSummaries() []*UsageSummary {
	if x != nil {
		return x.UsageSummaries
	}
	return nil
}

func (x *GetUsageSummaryResponse) GetUsageSummariesMonthly() []*UsageSummary {
	if x != nil {
		return x.UsageSummariesMonthly
	}
	return nil
}

var File_v1_odachin_usage_proto protoreflect.FileDescriptor

var file_v1_odachin_usage_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x3c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x39, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x10, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x6e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x12, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x64,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x42, 0x0a, 0x0c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x0f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x64, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x17, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x15, 0x75, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x32, 0xca, 0x03,
	0x0a, 0x0c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f,
	0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x58, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e,
	0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x6f, 0x64, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e,
	0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x64, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x27, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb1, 0x01, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x42, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x75, 0x33,
	0x36, 0x32, 0x39, 0x2f, 0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x4f, 0x52, 0x58, 0xaa, 0x02, 0x0e,
	0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0xca, 0x02,
	0x0e, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0xe2,
	0x02, 0x1a, 0x4f, 0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x5c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4f,
	0x64, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x3a, 0x3a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_v1_odachin_usage_proto_rawDescOnce sync.Once
	file_v1_odachin_usage_proto_rawDescData []byte
)

func file_v1_odachin_usage_proto_rawDescGZIP() []byte {
	file_v1_odachin_usage_proto_rawDescOnce.Do(func() {
		file_v1_odachin_usage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_odachin_usage_proto_rawDesc), len(file_v1_odachin_usage_proto_rawDesc)))
	})
	return file_v1_odachin_usage_proto_rawDescData
}

var file_v1_odachin_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_v1_odachin_usage_proto_goTypes = []any{
	(*ApplicateUsageRequest)(nil),       // 0: odachin.reward.ApplicateUsageRequest
	(*GetUsageCategoriesResponse)(nil),  // 1: odachin.reward.GetUsageCategoriesResponse
	(*ApproveUsageRequest)(nil),         // 2: odachin.reward.ApproveUsageRequest
	(*UsageApplication)(nil),            // 3: odachin.reward.UsageApplication
	(*GetUsageApplicationRequest)(nil),  // 4: odachin.reward.GetUsageApplicationRequest
	(*GetUsageApplicationResponse)(nil), // 5: odachin.reward.GetUsageApplicationResponse
	(*UsageSummary)(nil),                // 6: odachin.reward.UsageSummary
	(*GetUsageSummaryResponse)(nil),     // 7: odachin.reward.GetUsageSummaryResponse
	(*timestamppb.Timestamp)(nil),       // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_v1_odachin_usage_proto_depIdxs = []int32{
	8, // 0: odachin.reward.UsageApplication.created_at:type_name -> google.protobuf.Timestamp
	3, // 1: odachin.reward.GetUsageApplicationResponse.usage_applications:type_name -> odachin.reward.UsageApplication
	6, // 2: odachin.reward.GetUsageSummaryResponse.usage_summaries:type_name -> odachin.reward.UsageSummary
	6, // 3: odachin.reward.GetUsageSummaryResponse.usage_summaries_monthly:type_name -> odachin.reward.UsageSummary
	0, // 4: odachin.reward.UsageService.ApplicateUsage:input_type -> odachin.reward.ApplicateUsageRequest
	9, // 5: odachin.reward.UsageService.GetUsageCategories:input_type -> google.protobuf.Empty
	2, // 6: odachin.reward.UsageService.ApproveUsage:input_type -> odachin.reward.ApproveUsageRequest
	4, // 7: odachin.reward.UsageService.GetUsageApplication:input_type -> odachin.reward.GetUsageApplicationRequest
	9, // 8: odachin.reward.UsageService.GetUsageSummary:input_type -> google.protobuf.Empty
	9, // 9: odachin.reward.UsageService.ApplicateUsage:output_type -> google.protobuf.Empty
	1, // 10: odachin.reward.UsageService.GetUsageCategories:output_type -> odachin.reward.GetUsageCategoriesResponse
	9, // 11: odachin.reward.UsageService.ApproveUsage:output_type -> google.protobuf.Empty
	5, // 12: odachin.reward.UsageService.GetUsageApplication:output_type -> odachin.reward.GetUsageApplicationResponse
	7, // 13: odachin.reward.UsageService.GetUsageSummary:output_type -> odachin.reward.GetUsageSummaryResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v1_odachin_usage_proto_init() }
func file_v1_odachin_usage_proto_init() {
	if File_v1_odachin_usage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_odachin_usage_proto_rawDesc), len(file_v1_odachin_usage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_odachin_usage_proto_goTypes,
		DependencyIndexes: file_v1_odachin_usage_proto_depIdxs,
		MessageInfos:      file_v1_odachin_usage_proto_msgTypes,
	}.Build()
	File_v1_odachin_usage_proto = out.File
	file_v1_odachin_usage_proto_goTypes = nil
	file_v1_odachin_usage_proto_depIdxs = nil
}
