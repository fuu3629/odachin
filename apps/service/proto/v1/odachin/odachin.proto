syntax = "proto3";
package odachin;
import "google/protobuf/empty.proto";
import "buf/validate/validate.proto";


service OdachinService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  // TODO 未テスト
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc CreateGroup(CreateGroupRequest) returns (google.protobuf.Empty);
  rpc InviteUser(InviteUserRequest) returns (google.protobuf.Empty);
  rpc AcceptInvitation(AcceptInvitationRequest) returns (google.protobuf.Empty);
  rpc RegisterReward(RegisterRewardRequest) returns (google.protobuf.Empty);
  rpc DeleteReward(DeleteRewardRequest) returns (google.protobuf.Empty);
  rpc RegisterAllowance(RegisterAllowanceRequest) returns (google.protobuf.Empty);
  rpc UpdateAllowance(UpdateAllowanceRequest) returns (google.protobuf.Empty);
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse);
  rpc GetOwnInfo(google.protobuf.Empty) returns (GetOwnInfoResponse);
  rpc GetRewardList(GetRewardListRequest) returns (GetRewardListResponse);
}

enum Status {
  SUCCESS = 0;  // 成功
  FAILURE = 1;  // 失敗
}

enum Role {
  PARENT = 0;  // 親
  CHILD = 1;   // 子供
}

enum DayOfWeek {
  MONDAY = 0;
  TUESDAY = 1;
  WEDNESDAY = 2;
  THURSDAY = 3;
  FRIDAY = 4;
  SATURDAY = 5;
  SUNDAY = 6;
}

message Alloance{
  enum Type {
    EVERY_N_DAY = 0;   // n日ごと
    WEEKLY = 1;  // 毎週
    MONTHLY = 2; // 毎月
  }
}

message Reward{
  enum Type{
    DAILY = 0; // 毎日
    WEEKLY = 1; // 毎週
    MONTHLY = 2; // 毎月
  }
}

message RewardInfo{
  uint64 reward_period_id = 1 [(buf.validate.field).int64.gte = 1];
  string from_user_id = 2 [(buf.validate.field).string.min_len = 1];
  string to_user_id = 3 [(buf.validate.field).string.min_len = 1];
  double amount = 4 [(buf.validate.field).double.gt = 0];
  Reward.Type reward_type = 5 [(buf.validate.field).enum.defined_only = true];
  string title = 6 [(buf.validate.field).string.min_len = 1];
  string description = 7 [(buf.validate.field).string.min_len = 1];
  bool isCompleted = 8;
  bool isEditable = 9;
}

message CreateUserRequest {
  string user_id = 1 [ (buf.validate.field).string.min_len = 1 ];
  string name = 2 [ (buf.validate.field).string.min_len = 1 ];
  string email = 3 [(buf.validate.field).string.email = true];
  string password = 4 [ (buf.validate.field).string.min_len = 8 ];
  Role role = 5 [(buf.validate.field).enum.defined_only = true];
}

message CreateUserResponse {
  string token =1;
}

message UpdateUserRequest {
  optional string name = 1;
  optional string email = 2;
  optional bytes profile_image = 3;
}

message LoginRequest {
  string user_id = 1 [ (buf.validate.field).string.min_len = 1 ];
  string password = 2 [ (buf.validate.field).string.min_len = 8 ];
}

message LoginResponse {
  string token =1;
}

message CreateGroupRequest {
  string family_name = 1 [(buf.validate.field).string.min_len = 1];
}

message InviteUserRequest {
  string to_user_id = 1 [(buf.validate.field).string.min_len = 1];
}

message AcceptInvitationRequest {
  uint64 invitation_id = 1 [(buf.validate.field).int64.gte = 1];
}

message RegisterRewardRequest {
  string to_user_id = 1 [(buf.validate.field).string.min_len = 1];
  double amount = 2 [(buf.validate.field).double.gt = 0];
  Reward.Type reward_type = 3 [(buf.validate.field).enum.defined_only = true];
  string title = 4 [(buf.validate.field).string.min_len = 1];
  string description  = 5 [(buf.validate.field).string.min_len = 1];
}

message DeleteRewardRequest {
  uint64 reward_id = 1 [(buf.validate.field).int64.gte = 1];
}

message RegisterAllowanceRequest {
  string to_user_id = 1 [(buf.validate.field).string.min_len = 1];
  double amount = 2 [(buf.validate.field).double.gt = 0];
  Alloance.Type interval_type = 3 [(buf.validate.field).enum.defined_only = true];
  optional uint32 interval = 4 [(buf.validate.field).int32.gte = 1];
  optional uint32 date = 5 [(buf.validate.field).int32.gte = 1, (buf.validate.field).int32.lte = 31];
  optional DayOfWeek day_of_week = 6;
}

message UpdateAllowanceRequest {
  uint64 allowance_id = 1 [(buf.validate.field).int64.gte = 1];
  optional double amount = 2 [(buf.validate.field).double.gt = 0];
  optional Alloance.Type interval_type = 3 ;
  optional uint32 interval = 4;
  optional uint32 date = 5;
  optional DayOfWeek day_of_week = 6;
}

message GetUserInfoRequest {
  string user_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetUserInfoResponse {
  string user_id = 1;
  string name = 2;
  Role role = 3;
  optional string avatar_image_url = 4;
}

message GetOwnInfoResponse{
  string name = 1;
  string email = 2;
  optional string avater_image_url = 3;
}

message GetRewardListRequest {
  Reward.Type reward_type = 1 [(buf.validate.field).enum.defined_only = true];
}

message GetRewardListResponse {
  repeated RewardInfo reward_list = 1;
}